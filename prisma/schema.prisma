// This is your Prisma schema file,


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "sqlserver"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String        @unique
  city         String
  password     String
  topics       Topic[]
  newsItems    News[]
  partnerships Partnership[]
  photos       Photo[]
  videos       Video[]
  createdAt    DateTime      @default(now())
}

model Topic {
  id          Int      @id @default(autoincrement())
  title       String   @db.NVarChar(Max) // Serialized JSON: { en: String, ar: String, fr: String }
  paragraph   String   @db.NVarChar(Max) // Serialized JSON: { en: String, ar: String, fr: String }
  image       String?
  youtubeLink String?
  user        User     @relation(fields: [userEmail], references: [email])
  userEmail   String
  createdAt   DateTime @default(now())
}

model News {
  id          Int      @id @default(autoincrement())
  title       String   @db.NVarChar(Max) //Serialized J
  paragraph   String   @db.NVarChar(Max) //Serialized J
  image       String?
  youtubeLink String?
  isFeatured  Boolean  @default(false)
  user        User     @relation(fields: [userEmail], references: [email])
  userEmail   String
  createdAt   DateTime @default(now())
}

model Partnership {
  id         Int      @id @default(autoincrement())
  websiteUrl String
  image      String
  user       User     @relation(fields: [userEmail], references: [email])
  userEmail  String
  createdAt  DateTime @default(now())
}

model Photo {
  id        Int      @id @default(autoincrement())
  image     String   @db.NVarChar(Max) // Change this line to use NVarChar(Max)
  user      User     @relation(fields: [userEmail], references: [email])
  userEmail String
  createdAt DateTime @default(now())
}

model Video {
  id          Int      @id @default(autoincrement())
  title       String   @db.NVarChar(Max) // Serialized JSON: { en: String, ar: String, fr: String }
  youtubeLink String
  user        User     @relation(fields: [userEmail], references: [email])
  userEmail   String
  createdAt   DateTime @default(now())
}
